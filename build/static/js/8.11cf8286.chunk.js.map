{"version":3,"sources":["components/JeepneysTableList/JeepneysInfoModal.js","components/JeepneysTableList/AddJeepneyModal.js","components/JeepneysTableList/JeepneysTableList.js"],"names":["JeepneysInfoModal","props","useState","isModalVisible","setIsModalVisible","confirmLoading","setConfirmLoading","ifCanceled","setIfCanceled","jeepneys","setJeepneys","images","setImages","setImagePath","type","onClick","axios","get","then","res","imagesCopy","find","imageOwnerId","info","id","imageReferenceId","imagePath","catch","error","console","log","title","visible","onOk","passedData","setTimeout","onCancel","afterClose","afterClosing","footer","loading","delete","params","referenceId","filter","jeepneysCopy","jeepney","success","content","danger","barangayId","plateNumber","jeepCapacity","className","map","image","index","md","span","height","src","style","borderColor","border","AddJeepneyModal","file","setFilename","uploadedImagePath","barangays","setBarangays","useEffect","data","Option","handleCancel","onFinish","values","post","destroyOnClose","form","htmlType","layout","name","initialValues","remember","onFinishFailed","errorInfo","Item","label","rules","required","message","placeholder","width","onChange","value","barangay","barangayName","action","listType","maxCount","icon","UploadOutlined","JeepneysTableList","Search","dataFromModal","setDataFromModal","d","modalClosed","justify","direction","onSearch","_res","allowClear","enterButton","orientation","dataSource","scroll","x","y","sticky","dataIndex","fixed","render"],"mappings":"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","file":"static/js/8.11cf8286.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Card, Image, Space, Col, Row } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeepneysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //   .get(\"/api/v1/images/\")\r\n  //   .then((res) => {\r\n  //     let data = res.data;\r\n  //     setImages(data);\r\n  //   })\r\n  //   .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .get(\"/api/v1/images/\")\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.find(\r\n          (imagesCopy) =>\r\n            imagesCopy.imageOwnerId === props.info.id &&\r\n            imagesCopy.imageReferenceId === 3\r\n        );\r\n        setImagePath(imagesCopy.imagePath);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 3,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter(\r\n          (imagesCopy) =>\r\n            imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 3\r\n        );\r\n        setImages(imagesCopy);\r\n        console.log(imagesCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .delete(\"/api/v1/jeepneys/delete_jeep\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = jeepneysCopy.filter((jeepney) => jeepney.id !== id);\r\n        setJeepneys(jeepneysCopy);\r\n\r\n        console.log(jeepneysCopy);\r\n        Modal.success({\r\n          content: \"Jeepney has been Removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Barangay image has been removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <Space>\r\n        <Button type=\"primary\" onClick={showModal}>\r\n          View\r\n        </Button>\r\n\r\n        {/* <Button type=\"default\" onClick={showModal}>\r\n        Assign Driver\r\n      </Button> */}\r\n      </Space>\r\n      <Modal\r\n        title=\"Jeepney Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h3>Barangay Id:</h3>\r\n          {props.info.barangayId}\r\n        </p>\r\n        <p>\r\n          <h3>Plate Number:</h3>\r\n          {props.info.plateNumber}\r\n        </p>\r\n        <p>\r\n          <h3>Jeep Capacity:</h3>\r\n          {props.info.jeepCapacity}\r\n        </p>\r\n        <h3>Uploaded Images: </h3>\r\n        <Card className=\"shadow-sm\">\r\n          {images.map((image, index) => (\r\n            <Col key={index} md={{ span: 6 }}>\r\n              <Row>\r\n                <Image\r\n                  height={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                  style={{ borderColor: \"white\", border: \"10px\" }}\r\n                />\r\n                <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                  Delete\r\n                </Button>\r\n              </Row>\r\n            </Col>\r\n          ))}\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysInfoModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload, Select } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/jeepneys/add_jeep\", values)\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n        jeepneysCopy = [...jeepneysCopy, res.data];\r\n        console.log(jeepneysCopy);\r\n        setJeepneys(jeepneysCopy);\r\n        // console.log(filename.file.response);\r\n        Modal.success({\r\n          content: \"Successfully Added New Jeepney\",\r\n        });\r\n\r\n        axios.post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: res.data.id,\r\n          imageReferenceId: 3,\r\n          imagePath: uploadedImagePath,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Jeepney\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Jeepney\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Jeepney:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay:\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's ID!\" },\r\n            ]}\r\n          >\r\n            <Select\r\n              placeholder=\"Select Barangay\"\r\n              style={{ width: '100%' }}\r\n              onChange={handleChange}\r\n            >\r\n              {barangays.map((barangay, index) => (\r\n                <Option value={barangay.id}>{barangay.barangayName}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Plate Number:\"\r\n            name=\"plateNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Plate Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Jeep Capacity:\"\r\n            name=\"jeepCapacity\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Jeep Capacity!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n          </Upload>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Space, Input, Row, Col, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport JeepneysInfoModal from \"./JeepneysInfoModal\";\r\nimport AddJeepneyModal from \"./AddJeepneyModal\";\r\n\r\nfunction JeepneysTableList() {\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/jeepneys/\")\r\n      .then((res) => {\r\n\r\n        let data = res.data;\r\n        data = data.map((d) => {\r\n          return { ...d, barangayName: d.barangay.barangayName };\r\n        });\r\n\r\n        setJeepneys(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/jeepneys/search_jeepneys\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        data = data.map((d) => {\r\n          return { ...d, barangayName: d.barangay.barangayName };\r\n        });\r\n\r\n        setJeepneys(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios\r\n      .get(\"/api/v1/jeepneys/\")\r\n      .then((res) => {\r\n\r\n        let data = res.data;\r\n        data = data.map((d) => {\r\n          return { ...d, barangayName: d.barangay.barangayName };\r\n        });\r\n\r\n        setJeepneys(data);\r\n      })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Jeepney\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n          <AddJeepneyModal\r\n            info={\"\"}\r\n            passedData={setDataFromModal}\r\n            afterClosing={modalClosed}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Jeepneys</Divider>\r\n      <Row>\r\n        <Table dataSource={jeepneys} scroll={{ x: 1000, y: 500 }} sticky>\r\n          <Column\r\n            title=\"Barangay\"\r\n            dataIndex=\"barangayName\"\r\n            key=\"barangayId\"\r\n          ></Column>\r\n          <ColumnGroup\r\n            title=\"Plate Number\"\r\n            dataIndex=\"plateNumber\"\r\n            key=\"plateNumber\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Jeep Capacity\"\r\n            dataIndex=\"jeepCapacity\"\r\n            key=\"jeepCapacity\"\r\n          ></ColumnGroup>\r\n          {/* <ColumnGroup\r\n            title=\"Current Driver\"\r\n            dataIndex=\"currentDriver\"\r\n            key=\"currentDriver\"\r\n          ></ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            render={(value) => (\r\n              <Space>\r\n                <JeepneysInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysTableList;\r\n"],"sourceRoot":""}