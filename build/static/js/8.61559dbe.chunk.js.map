{"version":3,"sources":["components/BarangaysTableList/BarangaysInfoModal.js","components/BarangaysTableList/AddBarangayModal.js","components/BarangaysTableList/BarangaysTableList.js"],"names":["BarangaysInfoModal","props","useState","isModalVisible","setIsModalVisible","confirmLoading","setConfirmLoading","ifCanceled","setIfCanceled","barangays","setBarangays","type","onClick","console","log","info","title","visible","onOk","passedData","setTimeout","onCancel","afterClose","afterClosing","footer","loading","id","axios","delete","params","then","res","barangaysCopy","filter","barangay","success","content","catch","error","danger","barangayName","location","barangayDescription","AddBarangayModal","handleCancel","onFinish","values","post","data","destroyOnClose","form","htmlType","name","initialValues","remember","onFinishFailed","errorInfo","Item","label","rules","required","message","BarangaysTableList","Search","dataFromModal","setDataFromModal","useEffect","get","modalClosed","justify","span","direction","placeholder","onSearch","value","_res","allowClear","enterButton","orientation","dataSource","scroll","x","y","sticky","dataIndex","fixed","render"],"mappings":"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","file":"static/js/8.61559dbe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction BarangaysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n\r\n    console.log(props.info);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n    .delete(\"/api/v1/barangays/delete_barangay\", {\r\n      params: {\r\n        id,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      let barangaysCopy = [...barangays];\r\n\r\n      barangaysCopy = barangaysCopy.filter((barangay) => barangay.id !== id);\r\n     setBarangays(barangaysCopy);\r\n      console.log(barangaysCopy);\r\n      Modal.success({\r\n        content: 'Barangay has been Removed',\r\n      });\r\n    })\r\n    .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        View\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button loading={confirmLoading} onClick={() => handleDelete(props.info.id)} danger>\r\n              Remove\r\n            </Button>\r\n          ]}\r\n      >\r\n        <p>\r\n          <h3>Bargangay ID:</h3>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h3>Barangay Name:</h3>\r\n          {props.info.barangayName}\r\n        </p>\r\n        <p>\r\n          <h3>Location:</h3>\r\n          {props.info.location}\r\n        </p>\r\n        <p>\r\n          <h3>Barangay Description: </h3>\r\n          {props.info.barangayDescription}\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysInfoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction AddBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  \r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n    \r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n      \r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n          .post(\"/api/v1/barangays/add_barangay\", values)\r\n          .then((res) => {\r\n            let barangaysCopy = [...barangays];\r\n    \r\n            barangaysCopy = [...barangaysCopy, res.data];\r\n            console.log(barangaysCopy);\r\n           setBarangays(barangaysCopy);\r\n           Modal.success({\r\n            content: 'Successfully Added New Barangay',\r\n          });\r\n          })\r\n          .catch((error) => console.log(error));\r\n      \r\n  };\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: 'Failure to Add New Barangay',\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Barangay\r\n      </Button>\r\n     \r\n      <Modal\r\n        title=\"Add Barangay:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n        <Button key=\"back\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>,\r\n        <Button form=\"myForm\" key=\"submit\" htmlType=\"submit\" type=\"primary\" loading={confirmLoading} onClick={onFinish}>\r\n          Add\r\n        </Button>\r\n          ]}\r\n      >\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            id=\"myForm\"\r\n        >\r\n     \r\n         \r\n     <Form.Item\r\n          label=\"Barangay Name\"\r\n          name=\"barangayName\"\r\n          rules={[{ required: true, message: \"Please input the Barangay's Name!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Location\"\r\n          name=\"location\"\r\n          rules={[{ required: true, message: \"Please input Barangay's Location!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Barangay Description\"\r\n          name=\"barangayDescription\"\r\n          rules={[{ required: true, message: \"Please input the Barangay's Description!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        </Form>\r\n      </Modal>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayModal;\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport BarangaysInfoModal from \"./BarangaysInfoModal\";\r\nimport AddBarangayModal from \"./AddBarangayModal\";\r\n\r\nfunction BarangaysTableList() {\r\n  const [barangays, setBarangays] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/barangays/search_barangays\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        setBarangays(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios.get(\"/api/v1/barangays/search_all_barangays\").then((res) => {\r\n      console.log(res);\r\n      let data = res.data;\r\n      setBarangays(data);\r\n    });\r\n  };\r\n  // const viewApi = () => {\r\n  //   axios.get(\"/api/v1/barangays/\").then((res) => {\r\n  //     console.log(res.data);\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Barangay\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col></Col>\r\n        <Col span={4}>\r\n          <AddBarangayModal\r\n            info={\"\"}\r\n            passedData={setDataFromModal}\r\n            afterClosing={modalClosed}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Barangays</Divider>\r\n      <Row>\r\n        <Table dataSource={barangays} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n          <Column\r\n            title=\"Barangay Name\"\r\n            dataIndex=\"barangayName\"\r\n            key=\"barangayName\"\r\n          ></Column>\r\n          {/* </ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Location\"\r\n            dataIndex=\"location\"\r\n            key=\"location\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Barangay Description\"\r\n            dataIndex=\"barangayDescription\"\r\n            key=\"barangayDescription\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            render={(value) => (\r\n              <Space>\r\n                <BarangaysInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysTableList;\r\n"],"sourceRoot":""}