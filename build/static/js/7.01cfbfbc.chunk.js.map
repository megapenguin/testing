{"version":3,"sources":["components/BarangaysTableList/BarangaysInfoModal.js","components/BarangaysTableList/AddBarangayModal.js","components/BarangaysTableList/EditBarangayModal.js","components/BarangaysTableList/BarangaysTableList.js"],"names":["BarangaysInfoModal","props","useState","isModalVisible","setIsModalVisible","confirmLoading","setConfirmLoading","ifCanceled","setIfCanceled","barangays","setBarangays","images","setImages","imagePath","setImagePath","useEffect","axios","get","then","res","data","catch","error","console","log","type","onClick","imagesCopy","find","imageOwnerId","info","id","imageReferenceId","title","visible","onOk","passedData","setTimeout","onCancel","afterClose","afterClosing","footer","loading","delete","params","referenceId","filter","barangaysCopy","barangay","success","content","danger","barangayName","location","barangayDescription","className","height","src","style","borderColor","border","AddBarangayModal","file","setFilename","uploadedImagePath","handleCancel","onFinish","values","post","destroyOnClose","form","htmlType","name","initialValues","remember","onFinishFailed","errorInfo","Item","label","rules","required","message","action","listType","maxCount","onChange","icon","UploadOutlined","EditBarangayModal","useForm","ifChanged","setIfChanged","setFieldsValue","onValuesChange","changedValues","allValues","disabled","bordered","TextArea","BarangaysTableList","Search","dataFromModal","setDataFromModal","modalClosed","justify","span","direction","placeholder","onSearch","value","_res","allowClear","enterButton","orientation","dataSource","scroll","x","y","sticky","dataIndex","fixed","render"],"mappings":"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","file":"static/js/7.01cfbfbc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Card, Image } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction BarangaysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    axios\r\n    .get(\"/api/v1/images/\")\r\n    .then((res) => {\r\n      let data = res.data;\r\n      setImages(data);\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n    .get(\"/api/v1/images/\")\r\n    .then((res) => {\r\n      let imagesCopy = [...images];\r\n      imagesCopy = imagesCopy.find((imagesCopy) => imagesCopy.imageOwnerId === props.info.id && imagesCopy.imageReferenceId === 2);\r\n      setImagePath(imagesCopy.imagePath);\r\n    })\r\n    .catch((error) => console.log(error)); \r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n    .delete(\"/api/v1/images/delete_image\", {\r\n      params: {\r\n        id,\r\n        referenceId: 2,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      let imagesCopy = [...images];\r\n      imagesCopy = imagesCopy.filter((imagesCopy) => imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 2);\r\n      setImages(imagesCopy);\r\n      console.log(imagesCopy);\r\n      \r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n    axios\r\n    .delete(\"/api/v1/barangays/delete_barangay\", {\r\n      params: {\r\n        id,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      let barangaysCopy = [...barangays];\r\n\r\n      barangaysCopy = barangaysCopy.filter((barangay) => barangay.id !== id);\r\n     setBarangays(barangaysCopy);\r\n      console.log(barangaysCopy);\r\n      Modal.success({\r\n        content: 'Barangay has been Removed',\r\n      });\r\n    })\r\n    .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        View\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button loading={confirmLoading} onClick={() => handleDelete(props.info.id)} danger>\r\n              Remove\r\n            </Button>\r\n          ]}\r\n      >\r\n        <p>\r\n          <h3>Bargangay ID:</h3>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h3>Barangay Name:</h3>\r\n          {props.info.barangayName}\r\n        </p>\r\n        <p>\r\n          <h3>Location:</h3>\r\n          {props.info.location}\r\n        </p>\r\n        <p>\r\n          <h3>Barangay Description: </h3>\r\n          {props.info.barangayDescription}\r\n        </p>\r\n        <h3>Uploaded Images: </h3>\r\n          <Card className=\"shadow-sm\">\r\n              <Image\r\n                height={100}\r\n                src={`/api/v1/images/${imagePath}`}\r\n                style={{ borderColor: \"white\", border: \"10px\" }}\r\n              />\r\n\r\n          </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysInfoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/barangays/add_barangay\", values)\r\n      .then((res) => {\r\n        let barangaysCopy = [...barangays];\r\n        barangaysCopy = [...barangaysCopy, res.data];\r\n        console.log(barangaysCopy);\r\n        setBarangays(barangaysCopy);\r\n        Modal.success({\r\n          content: \"Successfully Added New Barangay\",\r\n        });\r\n\r\n        axios.post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: res.data.id,\r\n          imageReferenceId: 2,\r\n          imagePath: uploadedImagePath,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Barangay\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Barangay\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Barangay:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay Name\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Barangay Description\"\r\n            name=\"barangayDescription\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n          </Upload>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction EditBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayName: props.info.barangayName,\r\n      location: props.info.location,\r\n      barangayDescription: props.info.barangayDescription,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/barangays/update_barangay\", {\r\n        id: values.id,\r\n        barangayName: values.barangayName,\r\n        location: values.location,\r\n        barangayDescription: values.barangayDescription,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Barangay\",\r\n              })\r\n            : Modal.success({\r\n                content: \"Barangay Info is up to date\",\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Barangay Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Edit\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Barangay Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Barangay Id\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Name\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Barangay Description\"\r\n            name=\"barangayDescription\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBarangayModal;\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport BarangaysInfoModal from \"./BarangaysInfoModal\";\r\nimport AddBarangayModal from \"./AddBarangayModal\";\r\nimport EditBarangayModal from \"./EditBarangayModal\";\r\n\r\nfunction BarangaysTableList() {\r\n  const [barangays, setBarangays] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/barangays/search_barangays\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        setBarangays(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios.get(\"/api/v1/barangays/search_all_barangays\").then((res) => {\r\n      console.log(res);\r\n      let data = res.data;\r\n      setBarangays(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Barangay\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n          <AddBarangayModal\r\n            info={\"\"}\r\n            passedData={setDataFromModal}\r\n            afterClosing={modalClosed}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Barangays</Divider>\r\n      <Row>\r\n        <Table dataSource={barangays} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n          <Column\r\n            title=\"Barangay Name\"\r\n            dataIndex=\"barangayName\"\r\n            key=\"barangayName\"\r\n          ></Column>\r\n          {/* </ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Location\"\r\n            dataIndex=\"location\"\r\n            key=\"location\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Barangay Description\"\r\n            dataIndex=\"barangayDescription\"\r\n            key=\"barangayDescription\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            render={(value) => (\r\n              <Space>\r\n                <BarangaysInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n                <EditBarangayModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                ></EditBarangayModal>\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysTableList;\r\n"],"sourceRoot":""}