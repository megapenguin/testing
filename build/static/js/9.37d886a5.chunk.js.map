{"version":3,"sources":["components/DriversTableList/DriversInfoModal.js","components/DriversTableList/AddDriverModal.js","components/DriversTableList/DriversTableList.js"],"names":["DriversInfoModal","props","useState","isModalVisible","setIsModalVisible","confirmLoading","setConfirmLoading","ifCanceled","setIfCanceled","drivers","setDrivers","type","onClick","console","log","info","title","visible","onOk","passedData","setTimeout","onCancel","afterClose","afterClosing","footer","loading","id","axios","delete","params","then","res","driversCopy","filter","driver","success","content","catch","error","danger","firstName","middleName","lastName","contactNumber","address","email","AddDriverModal","handleCancel","onFinish","values","post","data","destroyOnClose","form","htmlType","name","initialValues","remember","onFinishFailed","errorInfo","Item","label","rules","required","message","DriversTableList","Search","dataFromModal","setDataFromModal","useEffect","get","modalClosed","justify","span","direction","placeholder","onSearch","value","_res","allowClear","enterButton","orientation","dataSource","scroll","x","y","sticky","dataIndex","fixed","render"],"mappings":"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","file":"static/js/9.37d886a5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction DriversInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n\r\n    console.log(props.info);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n      .delete(\"/api/v1/drivers/delete_driver\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let driversCopy = [...drivers];\r\n        driversCopy = driversCopy.filter((driver) => driver.id !== id);\r\n        setDrivers(driversCopy);\r\n        console.log(driversCopy);\r\n        Modal.success({\r\n          content: 'Driver has been Removed',\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        View\r\n      </Button>\r\n      <Modal\r\n        title=\"Driver Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button loading={confirmLoading} onClick={() => handleDelete(props.info.id)} danger>\r\n              Remove\r\n            </Button>\r\n          ]}\r\n      >\r\n        <p>\r\n          <h3>ID:</h3>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h3>Name:</h3>\r\n          {props.info.firstName} {props.info.middleName} {props.info.lastName}\r\n        </p>\r\n        <p>\r\n          <h3>Contact Number:</h3>\r\n          {props.info.contactNumber}\r\n        </p>\r\n        <p>\r\n          <h3>Address: </h3>\r\n          {props.info.address}\r\n        </p>\r\n        <p>\r\n          <h3>Email Address: </h3>\r\n          {props.info.email}\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DriversInfoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction AddDriverModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  \r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n    \r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n      \r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n      .post(\"/api/v1/drivers/add_driver\", values)\r\n      .then((res) => {\r\n        let driversCopy = [...drivers];\r\n        driversCopy = [...driversCopy, res.data];\r\n        console.log(driversCopy);\r\n        setDrivers(driversCopy);\r\n        Modal.success({\r\n          content: 'Successfully Added New Driver',\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n      \r\n  };\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: 'Failure to Add New Driver',\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Driver\r\n      </Button>\r\n     \r\n      <Modal\r\n        title=\"Add Driver:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n        <Button key=\"back\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>,\r\n        <Button form=\"myForm\" key=\"submit\" htmlType=\"submit\" type=\"primary\" loading={confirmLoading} onClick={onFinish}>\r\n          Add\r\n        </Button>\r\n          ]}\r\n      >\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            id=\"myForm\"\r\n        >\r\n     \r\n         \r\n        <Form.Item\r\n          label=\"First Name\"\r\n          name=\"firstName\"\r\n          rules={[{ required: true, message: \"Please input your Firstname!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Middle Name\"\r\n          name=\"middleName\"\r\n          rules={[\r\n            { required: true, message: \"Please input your Middlename!\" },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Last Name\"\r\n          name=\"lastName\"\r\n          rules={[{ required: true, message: \"Please input your Lastname!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[{ required: true, message: \"Please input your Address!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Contact Number\"\r\n          name=\"contactNumber\"\r\n          rules= {[{ required: true, message: \"Please input your Contact Number!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Generate Password\"\r\n          name=\"generatePassword\"\r\n          rules={[{ required: true, message: \"Please input your password!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, type: \"email\", message: \"Please input your Email!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDriverModal;\r\n","import React, { Suspense, useEffect, useState} from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport DriversInfoModal from \"./DriversInfoModal\";\r\nimport AddDriverModal from \"./AddDriverModal\";\r\n\r\nfunction DriversTableList() {\r\n  const [drivers, setDrivers] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/drivers/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        setDrivers(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/drivers/search_drivers\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        setDrivers(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios\r\n    .get(\"/api/v1/drivers/\")\r\n    .then((res) => {\r\n      console.log(res);\r\n\r\n      let data = res.data;\r\n      setDrivers(data);\r\n    })\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n          <Search\r\n              placeholder=\"Search Drivers\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n            <AddDriverModal\r\n                  info={\"\"}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Drivers</Divider>\r\n      <Row>\r\n        <Table dataSource={drivers} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n            <Column title=\"Firstname\" dataIndex=\"firstName\" key=\"firstName\"></Column>\r\n            <Column title=\"Middlename\" dataIndex=\"middleName\" key=\"middleName\"></Column>\r\n            <Column title=\"Lastname\" dataIndex=\"lastName\" key=\"lastName\"></Column>\r\n          {/* </ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Contact\"\r\n            dataIndex=\"contactNumber\"\r\n            key=\"contactNumber\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Address\"\r\n            dataIndex=\"address\"\r\n            key=\"address\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Email\"\r\n            dataIndex=\"email\"\r\n            key=\"email\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            render={(value) => (\r\n              <Space>\r\n                <DriversInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DriversTableList;\r\n"],"sourceRoot":""}