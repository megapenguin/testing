{"version":3,"sources":["components/dashboard4/ImageUploadChartShit.js"],"names":["Title","Text","ImageUploadChartShit","useState","images","setImages","useEffect","axios","get","then","res","data","catch","error","console","log","gutter","map","image","index","md","span","className","height","src","imagePath","style","borderColor","border","imageOwnerId","imageReferenceId","onClick","id","delete","params","imagesCopy","filter","jeepney","danger"],"mappings":"kSAeQA,E,IAAAA,M,IAAOC,KA4FAC,UA1Ff,WAAiC,IAAD,EACFC,mBAAS,IADP,mBACvBC,EADuB,KACfC,EADe,KAqD9B,OAlDAC,qBAAU,WACRC,IACGC,IAAI,mBACJC,MAAK,SAACC,GAGL,IAAIC,EAAOD,EAAIC,KACfN,EAAUM,MAEXC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IAyCD,oBAAKG,OAAQ,CAAC,GAAI,IAAlB,UACE,wDACCZ,EAAOa,KAAI,SAACC,EAAOC,GAAR,OACV,mBAAiBC,GAAI,CAAEC,KAAM,GAA7B,SACE,oBAAMC,UAAU,YAAhB,UACE,cAACtB,EAAD,UACE,mBACEuB,OAAQ,IACRC,IAAG,yBAAoBN,EAAMO,WAC7BC,MAAO,CAAEC,YAAa,QAASC,OAAQ,YAG3C,eAAC,UAAD,yBAAqBV,EAAMW,gBAC3B,cAAC,UAAD,UACI,WACA,OAAQX,EAAMY,kBACZ,KAAK,EAEH,OADAhB,QAAQC,IAAI,UACL,SACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,YARX,KAYJ,mBAAQgB,QAAS,kBA3CLC,EA2CwBd,EAAMc,QA1ClDzB,IACG0B,OAAO,8BAA+B,CACrCC,OAAQ,CACNF,QAGHvB,MAAK,SAACC,GACL,IAAIyB,EAAU,YAAO/B,GACrB+B,EAAaA,EAAWC,QAAO,SAACC,GAAD,OAAaA,EAAQL,KAAOA,KAC3D3B,EAAU8B,MAGXvB,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAbb,IAACmB,GA2CmCM,QAAM,EAArD,wBAvBMnB","file":"static/js/11.8ac99c85.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  Radio,\r\n  Image,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nconst { Title, Text } = Typography;\r\n\r\nfunction ImageUploadChartShit() {\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/images/\")\r\n      .then((res) => {\r\n        //console.log(res);\r\n\r\n        let data = res.data;\r\n        setImages(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(values);\r\n    // axios\r\n    //   .post(\"/api/v1/images/add_jeep\", values)\r\n    //   .then((res) => {\r\n    //     let imagesCopy = [...images];\r\n    //     imagesCopy = [...imagesCopy, res.data];\r\n    //     console.log(imagesCopy);\r\n    //    setImages(imagesCopy);\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const checking = () => {\r\n    console.log(\"check\");\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((jeepney) => jeepney.id !== id);\r\n        setImages(imagesCopy);\r\n        //console.log(imagesCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      <h1>List Of Saved Images: </h1>\r\n      {images.map((image, index) => (\r\n        <Col key={index} md={{ span: 6 }}>\r\n          <Card className=\"shadow-sm\">\r\n            <Title>\r\n              <Image\r\n                height={100}\r\n                src={`/api/v1/images/${image.imagePath}`}\r\n                style={{ borderColor: \"white\", border: \"10px\" }}\r\n              />\r\n            </Title>\r\n            <Content>Owner ID : {image.imageOwnerId}</Content>\r\n            <Content>\r\n              {(() => {\r\n                switch (image.imageReferenceId) {\r\n                  case 1:\r\n                    console.log(\"case 1\");\r\n                    return \"Driver\";\r\n                  case 2:\r\n                    return \"Jeepney\";\r\n                  case 3:\r\n                    return \"Barangay\";\r\n                }\r\n              })()}\r\n            </Content>\r\n            <Button onClick={() => handleDelete(image.id)} danger>\r\n              Delete\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ImageUploadChartShit;\r\n"],"sourceRoot":""}