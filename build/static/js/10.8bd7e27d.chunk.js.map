{"version":3,"sources":["components/dashboard2/JeepneysChartShit.js"],"names":["Title","Text","JeepneysChartShit","useState","jeepneys","setJeepneys","useEffect","axios","get","then","res","data","catch","error","console","log","gutter","name","initialValues","remember","onFinish","values","post","jeepneysCopy","onFinishFailed","errorInfo","Item","label","rules","required","message","onClick","type","htmlType","map","jeepney","index","md","span","className","driverId","plateNumber","jeepneyCapacity","id","delete","params","filter","danger"],"mappings":"kTAcQA,E,IAAAA,M,IAAOC,KAqHAC,UAnHf,WAA8B,IAAD,EACKC,mBAAS,IADd,mBACpBC,EADoB,KACVC,EADU,KAwD3B,OArDAC,qBAAU,WACRC,IACGC,IAAI,wCACJC,MAAK,SAACC,GAGL,IAAIC,EAAOD,EAAIC,KACfN,EAAYM,MAEbC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IA4CD,oBAAKG,OAAQ,CAAC,GAAI,IAAlB,UACE,oBACEC,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SA9CW,SAACC,GAChBP,QAAQC,IAAIM,GACZd,IACGe,KAAK,4BAA6BD,GAClCZ,MAAK,SAACC,GACL,IAAIa,EAAY,YAAOnB,GAEvBmB,EAAY,sBAAOA,GAAP,CAAqBb,EAAIC,OAErCN,EAAYkB,MAEbX,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAoC5BW,eAjCiB,SAACC,GACtBX,QAAQC,IAAI,QACZD,QAAQC,IAAI,UAAWU,IA2BrB,UAME,kBAAMC,KAAN,CACEC,MAAM,cACNV,KAAK,aACLW,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,kCAHrC,SAKE,wBAGF,kBAAMJ,KAAN,CACEC,MAAM,eACNV,KAAK,cACLW,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,yCAJ/B,SAOE,wBAGF,kBAAMJ,KAAN,CACEC,MAAM,gBACNV,KAAK,eACLW,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,sCAJ/B,SAOE,wBAGF,kBAAMJ,KAAN,UACE,mBAAQK,QAAS,WA1DvBjB,QAAQC,IAAI,UA0D6BiB,KAAK,UAAUC,SAAS,SAA3D,yBAMH7B,EAAS8B,KAAI,SAACC,EAASC,GAAV,OACZ,mBAAiBC,GAAI,CAAEC,KAAM,GAA7B,SACE,oBAAMC,UAAU,YAAhB,UACE,cAACvC,EAAD,UAAQmC,EAAQK,WAChB,cAAC,UAAD,UAAUL,EAAQM,cAClB,cAAC,UAAD,UAAUN,EAAQO,kBAClB,mBAAQX,QAAS,kBAnELY,EAmEwBR,EAAQQ,QAlEpDpC,IACGqC,OAAO,+BAAgC,CACtCC,OAAQ,CACNF,QAGHlC,MAAK,SAACC,GACL,IAAIa,EAAY,YAAOnB,GAEvBmB,EAAeA,EAAauB,QAAO,SAACX,GAAD,OAAaA,EAAQQ,KAAOA,KAC/DtC,EAAYkB,GAEZT,QAAQC,IAAIQ,MAEbX,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAfb,IAAC8B,GAmEqCI,QAAM,EAAvD,wBALMX","file":"static/js/10.8bd7e27d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction JeepneysChartShit() {\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/jeepneys/search_all_jeepneys\")\r\n      .then((res) => {\r\n        //console.log(res);\r\n\r\n        let data = res.data;\r\n        setJeepneys(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    axios\r\n      .post(\"/api/v1/jeepneys/add_jeep\", values)\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = [...jeepneysCopy, res.data];\r\n        //console.log(jeepneysCopy);\r\n        setJeepneys(jeepneysCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const checking = () => {\r\n    console.log(\"check\");\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/jeepneys/delete_jeep\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = jeepneysCopy.filter((jeepney) => jeepney.id !== id);\r\n        setJeepneys(jeepneysCopy);\r\n\r\n        console.log(jeepneysCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      <Form\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Barangay ID\"\r\n          name=\"barangayId\"\r\n          rules={[{ required: true, message: \"Please input the Barangay ID!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Plate Number\"\r\n          name=\"plateNumber\"\r\n          rules={[\r\n            { required: true, message: \"Please input jeepney's Plate Number!\" },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Jeep Capacity\"\r\n          name=\"jeepCapacity\"\r\n          rules={[\r\n            { required: true, message: \"Please input the Jeep's Capacity!\" },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button onClick={() => checking()} type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      {jeepneys.map((jeepney, index) => (\r\n        <Col key={index} md={{ span: 6 }}>\r\n          <Card className=\"shadow-sm\">\r\n            <Title>{jeepney.driverId}</Title>\r\n            <Content>{jeepney.plateNumber}</Content>\r\n            <Content>{jeepney.jeepneyCapacity}</Content>\r\n            <Button onClick={() => handleDelete(jeepney.id)} danger>\r\n              Delete\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default JeepneysChartShit;\r\n"],"sourceRoot":""}