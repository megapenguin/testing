{"version":3,"sources":["components/JeepneysTableList/JeepneysInfoModal.js","components/JeepneysTableList/AddJeepneyModal.js","components/JeepneysTableList/JeepneysTableList.js"],"names":["JeepneysInfoModal","props","useState","isModalVisible","setIsModalVisible","confirmLoading","setConfirmLoading","ifCanceled","setIfCanceled","jeepneys","setJeepneys","type","onClick","console","log","info","title","visible","onOk","passedData","setTimeout","onCancel","afterClose","afterClosing","footer","loading","id","axios","delete","params","then","res","jeepneysCopy","filter","jeepney","success","content","catch","error","danger","driverId","plateNumber","jeepCapacity","AddJeepneyModal","handleCancel","onFinish","values","post","data","destroyOnClose","form","htmlType","name","initialValues","remember","onFinishFailed","errorInfo","Item","label","rules","required","message","JeepneysTableList","Search","dataFromModal","setDataFromModal","useEffect","get","modalClosed","justify","span","direction","placeholder","onSearch","value","_res","allowClear","enterButton","orientation","dataSource","scroll","x","y","sticky","dataIndex","fixed","render"],"mappings":"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","file":"static/js/10.c49bdcdb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeepneysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n\r\n    console.log(props.info);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n      .delete(\"/api/v1/jeepneys/delete_jeep\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = jeepneysCopy.filter((jeepney) => jeepney.id !== id);\r\n        setJeepneys(jeepneysCopy);\r\n\r\n        console.log(jeepneysCopy);\r\n        Modal.success({\r\n          content: 'Jeepney has been Removed',\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        View\r\n      </Button>\r\n      <Modal\r\n        title=\"Jeepney Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button loading={confirmLoading} onClick={() => handleDelete(props.info.id)} danger>\r\n              Remove\r\n            </Button>\r\n          ]}\r\n      >\r\n        <p>\r\n          <h3>Driver ID:</h3>\r\n          {props.info.driverId}\r\n        </p>\r\n        <p>\r\n          <h3>Plate Number:</h3>\r\n          {props.info.plateNumber}\r\n        </p>\r\n        <p>\r\n          <h3>Jeep Capacity:</h3>\r\n          {props.info.jeepCapacity}\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysInfoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction AddJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  \r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n    \r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n      \r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n    .post(\"/api/v1/jeepneys/add_jeep\", values)\r\n    .then((res) => {\r\n      let jeepneysCopy = [...jeepneys];\r\n\r\n      jeepneysCopy = [...jeepneysCopy, res.data];\r\n      console.log(jeepneysCopy);\r\n      setJeepneys(jeepneysCopy);\r\n      Modal.success({\r\n        content: 'Successfully Added New Jeepney',\r\n      });\r\n    })\r\n    .catch((error) => console.log(error));\r\n        \r\n     \r\n      \r\n  };\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: 'Failure to Add New Jeepney',\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Jeepney\r\n      </Button>\r\n     \r\n      <Modal\r\n        title=\"Add Jeepney:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n        <Button key=\"back\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>,\r\n        <Button form=\"myForm\" key=\"submit\" htmlType=\"submit\" type=\"primary\" loading={confirmLoading} onClick={onFinish}>\r\n          Add\r\n        </Button>\r\n          ]}\r\n      >\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            id=\"myForm\"\r\n        >\r\n     \r\n         \r\n     <Form.Item\r\n          label=\"Driver ID\"\r\n          name=\"driverId\"\r\n          rules={[{ required: true, message: \"Please input the Driver's ID!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Plate Number\"\r\n          name=\"plateNumber\"\r\n          rules={[{ required: true, message: \"Please input the Plate Number!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Jeep Capacity\"\r\n          name=\"jeepCapacity\"\r\n          rules={[{ required: true, message: \"Please input the Jeep Capacity!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        </Form>\r\n      </Modal>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyModal;\r\n","import React, { Suspense, useEffect, useState} from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport JeepneysInfoModal from \"./JeepneysInfoModal\";\r\nimport AddJeepneyModal from \"./AddJeepneyModal\";\r\n\r\nfunction JeepneysTableList() {\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/jeepneys/search_all_jeepneys\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        setJeepneys(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/jeepneys/search_jeepneys\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        setJeepneys(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    console.log(value);\r\n  };\r\n\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios\r\n    .get(\"/api/v1/jeepneys/search_all_jeepneys\")\r\n    .then((res) => {\r\n      console.log(res);\r\n      let data = res.data;\r\n      setJeepneys(data);\r\n    })\r\n  };\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Jeepney\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n            <AddJeepneyModal\r\n                  info={\"\"}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Jeepneys</Divider>\r\n      <Row>\r\n        <Table dataSource={jeepneys} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n            <Column title=\"Driver ID\" dataIndex=\"driverId\" key=\"driverId\"></Column>\r\n          {/* </ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Plate Number\"\r\n            dataIndex=\"plateNumber\"\r\n            key=\"plateNumber\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Jeep Capacity\"\r\n            dataIndex=\"jeepCapacity\"\r\n            key=\"jeepCapacity\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            render={(value) => (\r\n              <Space>\r\n                <JeepneysInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysTableList;\r\n"],"sourceRoot":""}