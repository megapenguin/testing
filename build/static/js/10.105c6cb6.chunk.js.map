{"version":3,"sources":["../node_modules/antd/lib/table/Column.js","../node_modules/antd/lib/table/ColumnGroup.js","../node_modules/@ant-design/icons-svg/es/asn/UnorderedListOutlined.js","../node_modules/@ant-design/icons/es/icons/UnorderedListOutlined.js","components/UsersTableList/UsersInfoModal.js","components/UsersTableList/UsersTableList.js"],"names":["Object","defineProperty","exports","value","_default","_","UnorderedListOutlined","props","ref","React","AntdIcon","assign","icon","UnorderedListOutlinedSvg","displayName","UsersInfoModal","useState","isModalVisible","setIsModalVisible","confirmLoading","setConfirmLoading","ifCanceled","setIfCanceled","images","setImages","type","className","onClick","axios","post","imageOwnerId","info","id","imageReferenceId","then","res","data","catch","error","console","log","title","visible","onOk","passedData","setTimeout","onCancel","afterClose","afterClosing","footer","loading","success","content","okButtonProps","style","borderRadius","danger","firstName","lastName","email","map","image","index","md","span","height","width","src","imagePath","UsersTableList","users","setUsers","Search","dataFromModal","setDataFromModal","Title","useEffect","get","modalClosed","justify","direction","placeholder","onSearch","_res","allowClear","enterButton","level","dataSource","scroll","x","y","sticky","dataIndex","fixed","render"],"mappings":"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","file":"static/js/10.105c6cb6.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n/* istanbul ignore next */\n\n/** This is a syntactic sugar for `columns` prop. So HOC will not work on this. */\n// eslint-disable-next-line no-unused-vars\nfunction Column(_) {\n  return null;\n}\n\nvar _default = Column;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n/* istanbul ignore next */\n\n/** This is a syntactic sugar for `columns` prop. So HOC will not work on this. */\n// eslint-disable-next-line no-unused-vars\nfunction ColumnGroup(_) {\n  return null;\n}\n\nvar _default = ColumnGroup;\nexports[\"default\"] = _default;","// This icon file is generated automatically.\nvar UnorderedListOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 192H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM104 228a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"unordered-list\", \"theme\": \"outlined\" };\nexport default UnorderedListOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UnorderedListOutlinedSvg from \"@ant-design/icons-svg/es/asn/UnorderedListOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UnorderedListOutlined = function UnorderedListOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: UnorderedListOutlinedSvg\n  }));\n};\n\nUnorderedListOutlined.displayName = 'UnorderedListOutlined';\nexport default /*#__PURE__*/React.forwardRef(UnorderedListOutlined);","import React, { useState } from \"react\";\r\nimport { Modal, Button, Image, Card, Col, Row } from \"antd\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction UsersInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 4,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    Modal.success({\r\n      content: \"Still in development\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n\r\n    //console.log(id);\r\n    // axios\r\n    //   .delete(\"/api/v1/users/delete_user\", {\r\n    //     params: {\r\n    //       id,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n\r\n    //     //console.log(driversCopy);\r\n\r\n    //     Modal.success({\r\n    //       content: \"User has been Removed\",\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-view\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <UnorderedListOutlined /> View\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UnorderedListOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"User Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            className=\"modal-button\"\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>ID:</h4>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h4>Name:</h4>\r\n          {props.info.firstName} {props.info.lastName}\r\n        </p>\r\n        <p>\r\n          <h4>Email Address: </h4>\r\n          {props.info.email}\r\n        </p>\r\n        <h4>User Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n            {images.map((image, index) => (\r\n              <Col key={index} md={{ span: 6 }}>\r\n                <br></br>\r\n                <Image\r\n                  height={100}\r\n                  width={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                />\r\n                <Row>\r\n                  <br></br>\r\n                  {/* <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                    Delete\r\n                  </Button> */}\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersInfoModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Space, Input, Row, Col, Divider, Typography } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport UsersInfoModal from \"./UsersInfoModal\";\r\n// import usersInfoModal from \"./usersInfoModal\";\r\n// import AddBarangayModal from \"./AddBarangayModal\";\r\n// import EditBarangayModal from \"./EditBarangayModal\";\r\n// import AddBarangayImageModal from \"./AddBarangayImageModal\";\r\n\r\nfunction UsersTableList() {\r\n  const [users, setUsers] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n  const { Title } = Typography;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/users/\")\r\n      .then((res) => {\r\n        // console.log(res);\r\n\r\n        let data = res.data;\r\n        setUsers(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios.post(\"/api/v1/users/search_user\", { value: value }).then((_res) => {\r\n      console.log(_res);\r\n      let data = _res.data;\r\n      setUsers(data);\r\n      console.log(\"success\");\r\n    });\r\n\r\n    //console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios.get(\"/api/v1/users/\").then((res) => {\r\n      //console.log(res);\r\n      let data = res.data;\r\n      setUsers(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Barangay\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n      <Divider>\r\n        <Title level={4}>List of Users</Title>\r\n      </Divider>\r\n      <Row>\r\n        <Table dataSource={users} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n          <Column title=\"Provider\" dataIndex=\"provider\" key=\"provider\"></Column>\r\n          <ColumnGroup\r\n            title=\"Email\"\r\n            dataIndex=\"email\"\r\n            key=\"email\"\r\n          ></ColumnGroup>\r\n\r\n          <Column\r\n            title=\"Firstname\"\r\n            dataIndex=\"firstName\"\r\n            key=\"firstName\"\r\n          ></Column>\r\n          <Column title=\"Lastname\" dataIndex=\"lastName\" key=\"lastName\"></Column>\r\n          {/* </ColumnGroup> */}\r\n\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            width=\"35vh\"\r\n            render={(value) => (\r\n              <Space>\r\n                <UsersInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersTableList;\r\n"],"sourceRoot":""}