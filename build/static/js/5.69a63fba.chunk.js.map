{"version":3,"sources":["components/BarangaysTableList/BarangaysInfoModal.js","components/BarangaysTableList/AddBarangayModal.js","components/BarangaysTableList/EditBarangayModal.js","components/BarangaysTableList/AddBarangayImageModal.js","components/BarangaysTableList/BarangaysTableList.js"],"names":["BarangaysInfoModal","props","useState","isModalVisible","setIsModalVisible","confirmLoading","setConfirmLoading","ifCanceled","setIfCanceled","images","setImages","type","onClick","axios","post","imageOwnerId","info","id","imageReferenceId","then","res","data","catch","error","console","log","title","visible","onOk","passedData","setTimeout","onCancel","afterClose","afterClosing","destroyOnClose","footer","loading","success","content","danger","barangayName","location","barangayDescription","className","map","image","index","md","span","height","src","imagePath","style","borderColor","border","delete","params","referenceId","imagesCopy","filter","AddBarangayModal","handleCancel","onFinish","values","form","htmlType","layout","name","initialValues","remember","onFinishFailed","errorInfo","Item","label","rules","required","message","TextArea","EditBarangayModal","useForm","ifChanged","setIfChanged","setFieldsValue","onValuesChange","changedValues","allValues","disabled","bordered","AddBarangayImageModal","filename","setFilename","uploadedImagePath","setUploadedImagePath","uploadImageStatus","setUploadImageStatus","uploadFile","action","headers","authorization","onChange","file","status","fileList","gutter","width","size","onRemove","val","fileName","response","fileId","listType","maxCount","icon","UploadOutlined","filePath","BarangaysTableList","barangays","setBarangays","Search","dataFromModal","setDataFromModal","useEffect","get","modalClosed","justify","direction","placeholder","onSearch","value","_res","allowClear","enterButton","orientation","dataSource","scroll","x","y","sticky","dataIndex","fixed","render"],"mappings":"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","file":"static/js/5.69a63fba.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Card, Image, Col, Row } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction BarangaysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"/api/v1/images/\")\r\n  //     .then((res) => {\r\n  //       let data = res.data;\r\n  //       setImages(data);\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 1,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n        //console.log(\"images\", images);\r\n        // let imagesCopy = [...images];\r\n        // imagesCopy = imagesCopy.find(\r\n        //   (imagesCopy) =>\r\n        //     imagesCopy.imageOwnerId === props.info.id &&\r\n        //     imagesCopy.imageReferenceId === 1\r\n        // );\r\n        //setImagePath(imagesCopy.imagePath);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDeleteImage = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Barangay image has been removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    Modal.success({\r\n      content: \"Still in development\",\r\n    });\r\n\r\n    // axios\r\n    //   .delete(\"/api/v1/barangays/delete_barangay\", {\r\n    //     params: {\r\n    //       id,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n    //     Modal.success({\r\n    //       content: \"Barangay has been Removed\",\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        View\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove Barangay\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h3>Bargangay ID:</h3>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h3>Barangay Name:</h3>\r\n          {props.info.barangayName}\r\n        </p>\r\n        <p>\r\n          <h3>Location:</h3>\r\n          {props.info.location}\r\n        </p>\r\n        <p>\r\n          <h3>Barangay Description: </h3>\r\n          {props.info.barangayDescription}\r\n        </p>\r\n        <h3>Uploaded Images: </h3>\r\n        <Card className=\"shadow-sm\">\r\n          {images.map((image, index) => (\r\n            <Col key={index} md={{ span: 6 }}>\r\n              <Row>\r\n                <Image\r\n                  height={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                  style={{ borderColor: \"white\", border: \"10px\" }}\r\n                />\r\n                <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                  Delete\r\n                </Button>\r\n              </Row>\r\n            </Col>\r\n          ))}\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysInfoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/barangays/add_barangay\", values)\r\n      .then((res) => {\r\n        // let barangaysCopy = [...barangays];\r\n        // barangaysCopy = [...barangaysCopy, res.data];\r\n        // //console.log(barangaysCopy);\r\n        // setBarangays(barangaysCopy);\r\n        Modal.success({\r\n          content: \"Successfully Added New Barangay\",\r\n        });\r\n\r\n        // axios.post(\"/api/v1/images/save_image\", {\r\n        //   imageOwnerId: res.data.id,\r\n        //   imageReferenceId: 2,\r\n        //   imagePath: uploadedImagePath,\r\n        // });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Barangay\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(\"fail\");\r\n    //console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Barangay\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Barangay:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay Name\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Barangay Description\"\r\n            name=\"barangayDescription\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n          {/* <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n          </Upload> */}\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction EditBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayName: props.info.barangayName,\r\n      location: props.info.location,\r\n      barangayDescription: props.info.barangayDescription,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/barangays/update_barangay\", {\r\n        id: values.id,\r\n        barangayName: values.barangayName,\r\n        location: values.location,\r\n        barangayDescription: values.barangayDescription,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Barangay\",\r\n              })\r\n            : Modal.success({\r\n                content: \"Barangay Info is up to date\",\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Barangay Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    //console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Edit\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Barangay Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Barangay Id\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Name\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Barangay Description\"\r\n            name=\"barangayDescription\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBarangayModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Upload,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  message,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddBarangayImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 1,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 1,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 1 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Images\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" type=\"danger\" onClick={handleCancel}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Row gutter={[16, 16]}>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture\"\r\n              maxCount={3}\r\n            >\r\n              <Button icon={<UploadOutlined />}>Upload Image(Max: 1)</Button>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n\r\n        <Row gutter={[16, 16]}>\r\n          <Image\r\n            width={250}\r\n            height={250}\r\n            src={`/api/v1/images/${\r\n              uploadedImagePath ? uploadedImagePath : \"logo.png\"\r\n            }`}\r\n            style={{ borderColor: \"white\", border: \"10px\" }}\r\n          />\r\n        </Row>\r\n        <Row gutter={[16, 16]}>\r\n          <Button onClick={viewFile}>Check Uploaded Image</Button>\r\n        </Row>\r\n        <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID\" name=\"imageOwnerId\">\r\n              <p>\r\n                <h3>{props.info.id}</h3>\r\n              </p>\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference\" name=\"imageReferenceId\">\r\n              <p>\r\n                <h3>Barangay</h3>\r\n              </p>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button onClick={onFinish} type=\"primary\">\r\n                {uploadedImagePath ? \"Save Image\" : \"Choose an image\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayImageModal;\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport BarangaysInfoModal from \"./BarangaysInfoModal\";\r\nimport AddBarangayModal from \"./AddBarangayModal\";\r\nimport EditBarangayModal from \"./EditBarangayModal\";\r\nimport AddBarangayImageModal from \"./AddBarangayImageModal\";\r\n\r\nfunction BarangaysTableList() {\r\n  const [barangays, setBarangays] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        // console.log(res);\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/barangays/search_barangays\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        setBarangays(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    //console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios.get(\"/api/v1/barangays/search_all_barangays\").then((res) => {\r\n      //console.log(res);\r\n      let data = res.data;\r\n      setBarangays(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Barangay\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n          <AddBarangayModal\r\n            info={\"\"}\r\n            passedData={setDataFromModal}\r\n            afterClosing={modalClosed}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Barangays</Divider>\r\n      <Row>\r\n        <Table dataSource={barangays} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n          <Column\r\n            title=\"Barangay Name\"\r\n            dataIndex=\"barangayName\"\r\n            key=\"barangayName\"\r\n          ></Column>\r\n          {/* </ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Location\"\r\n            dataIndex=\"location\"\r\n            key=\"location\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Barangay Description\"\r\n            dataIndex=\"barangayDescription\"\r\n            key=\"barangayDescription\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            render={(value) => (\r\n              <Space>\r\n                <BarangaysInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n                <EditBarangayModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n                <AddBarangayImageModal info={value} />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysTableList;\r\n"],"sourceRoot":""}