{"version":3,"sources":["components/JeepneysTableList/JeepneysInfoModal.js","components/JeepneysTableList/AddJeepneyModal.js","components/JeepneysTableList/JeepneysTableList.js"],"names":["JeepneysInfoModal","props","useState","isModalVisible","setIsModalVisible","confirmLoading","setConfirmLoading","ifCanceled","setIfCanceled","jeepneys","setJeepneys","images","setImages","imagePath","setImagePath","useEffect","axios","get","then","res","data","catch","error","console","log","type","onClick","imagesCopy","find","imageOwnerId","info","id","imageReferenceId","title","visible","onOk","passedData","setTimeout","onCancel","afterClose","afterClosing","footer","loading","delete","params","referenceId","filter","jeepneysCopy","jeepney","success","content","danger","barangayId","plateNumber","jeepCapacity","className","height","src","style","borderColor","border","AddJeepneyModal","file","setFilename","uploadedImagePath","barangays","setBarangays","Option","handleCancel","onFinish","values","post","destroyOnClose","form","htmlType","name","initialValues","remember","onFinishFailed","errorInfo","Item","label","rules","required","message","defaultValue","width","onChange","value","map","barangay","index","barangayName","action","listType","maxCount","icon","UploadOutlined","JeepneysTableList","Search","dataFromModal","setDataFromModal","d","modalClosed","justify","span","direction","placeholder","onSearch","_res","allowClear","enterButton","orientation","dataSource","scroll","x","y","sticky","dataIndex","fixed","render"],"mappings":"2YAoJeA,MAhJf,SAA2BC,GAAQ,IAAD,EACYC,oBAAS,GADrB,mBACzBC,EADyB,KACTC,EADS,OAEIF,mBAAS,IAFb,gCAGYA,oBAAS,IAHrB,mBAGzBG,EAHyB,KAGTC,EAHS,OAIIJ,oBAAS,GAJb,mBAIzBK,EAJyB,KAIbC,EAJa,OAKAN,mBAAS,IALT,mBAKzBO,EALyB,KAKfC,EALe,OAMJR,mBAAS,IANL,mBAMzBS,EANyB,KAMjBC,EANiB,OAOEV,mBAAS,IAPX,mBAOzBW,EAPyB,KAOdC,EAPc,KA8FhC,OArFAC,qBAAU,WACRC,IACCC,IAAI,mBACJC,MAAK,SAACC,GACL,IAAIC,EAAOD,EAAIC,KACfR,EAAUQ,MAEXC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC7B,IA8ED,gCACE,4BACA,mBAAQG,KAAK,UAAUC,QA9ET,WAChBtB,GAAkB,GAClBY,IACCC,IAAI,mBACJC,MAAK,SAACC,GACL,IAAIQ,EAAU,YAAOhB,GACrBgB,EAAaA,EAAWC,MAAK,SAACD,GAAD,OAAgBA,EAAWE,eAAiB5B,EAAM6B,KAAKC,IAAsC,IAAhCJ,EAAWK,oBACrGlB,EAAaa,EAAWd,cAEzBQ,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAqE5B,oBAQA,oBACEW,MAAM,sBACNC,QAAS/B,EACTE,eAAgBA,EAChB8B,KA9EW,WACflC,EAAMmC,WAAWnC,EAAM6B,MACvBxB,GAAkB,GAClBE,GAAc,GACd6B,YAAW,WACTjC,GAAkB,GAClBE,GAAkB,KACjB,MAwECgC,SA1Be,WACnB9B,GAAc,GACdJ,GAAkB,IAyBdmC,WAvBc,WACdhC,GAEFN,EAAMuC,gBAqBJC,OAAQ,CACN,mBAAQC,QAASrC,EAAgBqB,QAAS,kBAxE5BK,EAwE+C9B,EAAM6B,KAAKC,GAvE9EzB,GAAkB,GAClBE,GAAc,GACd6B,YAAW,WACTjC,GAAkB,GAClBE,GAAkB,KACjB,KACHU,IACC2B,OAAO,8BAA+B,CACrCC,OAAQ,CACNb,KACAc,YAAa,KAGhB3B,MAAK,SAACC,GACL,IAAIQ,EAAU,YAAOhB,GACrBgB,EAAaA,EAAWmB,QAAO,SAACnB,GAAD,OAAgBA,EAAWE,eAAiBE,GAAsC,IAAhCJ,EAAWK,oBAC5FpB,EAAUe,GACVJ,QAAQC,IAAIG,MAGbN,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,WAE9BN,IACG2B,OAAO,+BAAgC,CACtCC,OAAQ,CACNb,QAGHb,MAAK,SAACC,GACL,IAAI4B,EAAY,YAAOtC,GAEvBsC,EAAeA,EAAaD,QAAO,SAACE,GAAD,OAAaA,EAAQjB,KAAOA,KAC/DrB,EAAYqC,GAEZxB,QAAQC,IAAIuB,GACZ,IAAME,QAAQ,CACZC,QAAS,gCAGZ7B,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAxCb,IAACS,GAwE+DoB,QAAM,EAAnF,qBARJ,UAaE,8BACE,8CACClD,EAAM6B,KAAKsB,cAEd,8BACE,+CACCnD,EAAM6B,KAAKuB,eAEd,8BACE,gDACCpD,EAAM6B,KAAKwB,gBAEd,mDACE,mBAAMC,UAAU,YAAhB,SACI,mBACEC,OAAQ,IACRC,IAAG,yBAAoB5C,GACvB6C,MAAO,CAAEC,YAAa,QAASC,OAAQ,mB,8DC8CxCC,MApLf,SAAyB5D,GAAQ,IAAD,EACcC,oBAAS,GADvB,mBACvBC,EADuB,KACPC,EADO,OAEMF,mBAAS,IAFf,gCAGcA,oBAAS,IAHvB,mBAGvBG,EAHuB,KAGPC,EAHO,OAIMJ,oBAAS,GAJf,mBAIvBK,EAJuB,KAIXC,EAJW,OAKEN,mBAAS,IALX,mBAKvBO,EALuB,KAKbC,EALa,OAMNR,mBAAS,IANH,mBAMvB4D,EANuB,aAOE5D,mBAAS,gBAPX,mBAOb6D,GAPa,aAQoB7D,qBARpB,mBAQvB8D,EARuB,aASI9D,mBAAS,KATb,mBASvB+D,EATuB,KASZC,EATY,KAgB9BnD,qBAAU,WACRC,IACGC,IAAI,0CACJC,MAAK,SAACC,GACLI,QAAQC,IAAIL,GAEZ,IAAIC,EAAOD,EAAIC,KACf8C,EAAa9C,MAEdC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IA1B2B,IA2BtB6C,EA3BsB,IA2BtBA,OAMFC,EAAe,WACnB5D,GAAc,GACdJ,GAAkB,IASdiE,EAAW,SAACC,GAChB/C,QAAQC,IAAI8C,GACZrE,EAAMmC,WAAWnC,EAAM6B,MACvBxB,GAAkB,GAClBE,GAAc,GACd6B,YAAW,WACTjC,GAAkB,GAClBE,GAAkB,KACjB,KAEHU,IACGuD,KAAK,4BAA6BD,GAClCpD,MAAK,SAACC,GACL,IAAI4B,EAAY,YAAOtC,GACvBsC,EAAY,sBAAOA,GAAP,CAAqB5B,EAAIC,OACrCG,QAAQC,IAAIuB,GACZrC,EAAYqC,GAEZ,IAAME,QAAQ,CACZC,QAAS,mCAGXlC,IAAMuD,KAAK,4BAA6B,CACtC1C,aAAcV,EAAIC,KAAKW,GACvBC,iBAAkB,EAClBnB,UAAWmD,OAGd3C,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAmBlC,OACE,gCACE,mBAAQG,KAAK,UAAUC,QAlFT,WAChBtB,GAAkB,GAClBmB,QAAQC,IAAIvB,EAAM6B,OAgFhB,yBAIA,mBACEG,MAAM,eACNC,QAAS/B,EACTE,eAAgBA,EAChB8B,KAAMkC,EACN/B,SAAU8B,EACV7B,WAlEc,WACdhC,GAEFN,EAAMuC,gBAgEJgC,gBAAgB,EAChB/B,OAAQ,CACN,mBAAmBf,QAAS0C,EAA5B,mBAAY,QAGZ,mBACEK,KAAK,SAELC,SAAS,SACTjD,KAAK,UACLiB,QAASrC,EACTqB,QAAS2C,EANX,gBAEM,WAdV,SAwBE,oBACEM,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BR,SAAUA,EACVS,eAlDe,SAACC,GACtB,IAAMzD,MAAM,CACV4B,QAAS,+BAEXb,YAAW,WACTjC,GAAkB,GAClBE,GAAkB,KACjB,KACHiB,QAAQC,IAAI,QACZD,QAAQC,IAAI,UAAWuD,IA0CjBhD,GAAG,SALL,UAOE,kBAAMiD,KAAN,CACEC,MAAM,WACNN,KAAK,aACLO,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,oCAJ/B,SAOE,mBACEC,aAAa,WACb3B,MAAO,CAAE4B,MAAO,KAChBC,SAnDS,SAACC,GACpBjE,QAAQC,IAAR,mBAAwBgE,KA+ChB,SAKGvB,EAAUwB,KAAI,SAACC,EAAUC,GAAX,OACb,cAACxB,EAAD,CAAQqB,MAAOE,EAAS3D,GAAxB,SAA6B2D,EAASE,sBAK5C,kBAAMZ,KAAN,CACEC,MAAM,eACNN,KAAK,cACLO,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,mCAJ/B,SAOE,wBAGF,kBAAMJ,KAAN,CACEC,MAAM,gBACNN,KAAK,eACLO,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,oCAJ/B,SAOE,wBAEF,mBACES,OAAO,2BACPC,SAAS,UACTC,SAAU,EACVjC,KAAMA,EACNyB,SA7IO,SAACzB,GAChBC,EAAYD,IAuIN,SAOE,mBAAQkC,KAAM,cAACC,EAAA,EAAD,IAAd,8CCzDGC,UAhHf,WAA8B,IAAD,EACKhG,mBAAS,IADd,mBACpBO,EADoB,KACVC,EADU,KAEnByF,EAFmB,IAEnBA,OAFmB,EAGejG,mBAAS,IAHxB,mBAGpBkG,EAHoB,KAGLC,EAHK,KAK3BtF,qBAAU,WACRC,IACGC,IAAI,qBACJC,MAAK,SAACC,GACLI,QAAQC,IAAIL,GAEZ,IAAIC,EAAOD,EAAIC,KACfA,EAAOA,EAAKqE,KAAI,SAACa,GACf,OAAO,2BAAKA,GAAZ,IAAeV,aAAcU,EAAEZ,SAASE,kBAG1ClF,EAAYU,GACZG,QAAQC,IAAIJ,MAEbC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IAEH,IAiBMiF,EAAc,WAClBhF,QAAQC,IAAI,yBAA0B4E,GACtCpF,IAAMC,IAAI,wCAAwCC,MAAK,SAACC,GACtDI,QAAQC,IAAIL,GACZ,IAAIC,EAAOD,EAAIC,KACfV,EAAYU,OAIhB,OACE,gCACE,oBAAKoF,QAAQ,gBAAb,UACE,mBAAKC,KAAM,EAAX,SACE,mBAAOC,UAAU,WAAjB,SACE,cAACP,EAAD,CACEQ,YAAY,iBACZC,SAjCK,SAACpB,GAChBxE,IACGuD,KAAK,mCAAoC,CAAEiB,MAAOA,IAClDtE,MAAK,SAAC2F,GACLtF,QAAQC,IAAIqF,GACZ,IAAIzF,EAAOyF,EAAKzF,KAChBA,EAAOA,EAAKqE,KAAI,SAACa,GACf,OAAO,2BAAKA,GAAZ,IAAeV,aAAcU,EAAEZ,SAASE,kBAG1ClF,EAAYU,GACZG,QAAQC,IAAI,cAGhBD,QAAQC,IAAIgE,IAoBFsB,YAAY,EACZC,aAAW,QAIjB,mBAAKN,KAAM,EAAX,SACE,cAAC,EAAD,CACE3E,KAAM,GACNM,WAAYiE,EACZ7D,aAAc+D,SAIpB,mBAASS,YAAY,SAArB,8BACA,4BACE,oBAAOC,WAAYxG,EAAUyG,OAAQ,CAAEC,EAAG,IAAMC,EAAG,KAAOC,QAAM,EAAhE,UACE,cAAC,IAAD,CACEpF,MAAM,WACNqF,UAAU,gBACN,cAEN,cAAC,IAAD,CACErF,MAAM,eACNqF,UAAU,eACN,eAEN,cAAC,IAAD,CACErF,MAAM,gBACNqF,UAAU,gBACN,gBAON,cAAC,IAAD,CACErF,MAAM,UAENsF,MAAM,QACNC,OAAQ,SAAChC,GAAD,OACN,4BACE,cAAC,EAAD,CACE1D,KAAM0D,EACNpD,WAAYiE,EACZ7D,aAAc+D,QAPhB","file":"static/js/9.38d62af3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Card, Image, Space } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeepneysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .get(\"/api/v1/images/\")\r\n    .then((res) => {\r\n      let data = res.data;\r\n      setImages(data);\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n    .get(\"/api/v1/images/\")\r\n    .then((res) => {\r\n      let imagesCopy = [...images];\r\n      imagesCopy = imagesCopy.find((imagesCopy) => imagesCopy.imageOwnerId === props.info.id && imagesCopy.imageReferenceId === 3);\r\n      setImagePath(imagesCopy.imagePath);\r\n    })\r\n    .catch((error) => console.log(error)); \r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n    .delete(\"/api/v1/images/delete_image\", {\r\n      params: {\r\n        id,\r\n        referenceId: 3,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      let imagesCopy = [...images];\r\n      imagesCopy = imagesCopy.filter((imagesCopy) => imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 3);\r\n      setImages(imagesCopy);\r\n      console.log(imagesCopy);\r\n      \r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .delete(\"/api/v1/jeepneys/delete_jeep\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = jeepneysCopy.filter((jeepney) => jeepney.id !== id);\r\n        setJeepneys(jeepneysCopy);\r\n\r\n        console.log(jeepneysCopy);\r\n        Modal.success({\r\n          content: 'Jeepney has been Removed',\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Space>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        View\r\n      </Button>\r\n      \r\n      {/* <Button type=\"default\" onClick={showModal}>\r\n        Assign Driver\r\n      </Button> */}\r\n      </Space>\r\n      <Modal\r\n        title=\"Jeepney Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button loading={confirmLoading} onClick={() => handleDelete(props.info.id)} danger>\r\n              Remove\r\n            </Button>\r\n          ]}\r\n      >\r\n        <p>\r\n          <h3>Barangay Id:</h3>\r\n          {props.info.barangayId}\r\n        </p>\r\n        <p>\r\n          <h3>Plate Number:</h3>\r\n          {props.info.plateNumber}\r\n        </p>\r\n        <p>\r\n          <h3>Jeep Capacity:</h3>\r\n          {props.info.jeepCapacity}\r\n        </p>\r\n        <h3>Uploaded Images: </h3>\r\n          <Card className=\"shadow-sm\">\r\n              <Image\r\n                height={100}\r\n                src={`/api/v1/images/${imagePath}`}\r\n                style={{ borderColor: \"white\", border: \"10px\" }}\r\n              />\r\n\r\n          </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysInfoModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Menu, Modal, Button, Upload, Select } from \"antd\";\r\nimport { UploadOutlined, DownOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/jeepneys/add_jeep\", values)\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n        jeepneysCopy = [...jeepneysCopy, res.data];\r\n        console.log(jeepneysCopy);\r\n        setJeepneys(jeepneysCopy);\r\n        // console.log(filename.file.response);\r\n        Modal.success({\r\n          content: \"Successfully Added New Jeepney\",\r\n        });\r\n\r\n        axios.post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: res.data.id,\r\n          imageReferenceId: 3,\r\n          imagePath: uploadedImagePath,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Jeepney\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Jeepney\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Jeepney:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's ID!\" },\r\n            ]}\r\n          >\r\n            <Select\r\n              defaultValue=\"-Select-\"\r\n              style={{ width: 120 }}\r\n              onChange={handleChange}\r\n            >\r\n              {barangays.map((barangay, index) => (\r\n                <Option value={barangay.id}>{barangay.barangayName}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Plate Number\"\r\n            name=\"plateNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Plate Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Jeep Capacity\"\r\n            name=\"jeepCapacity\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Jeep Capacity!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n          </Upload>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyModal;\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport JeepneysInfoModal from \"./JeepneysInfoModal\";\r\nimport AddJeepneyModal from \"./AddJeepneyModal\";\r\n\r\nfunction JeepneysTableList() {\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/jeepneys/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        data = data.map((d) => {\r\n          return { ...d, barangayName: d.barangay.barangayName };\r\n        });\r\n\r\n        setJeepneys(data);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/jeepneys/search_jeepneys\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        data = data.map((d) => {\r\n          return { ...d, barangayName: d.barangay.barangayName };\r\n        });\r\n\r\n        setJeepneys(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios.get(\"/api/v1/jeepneys/search_all_jeepneys\").then((res) => {\r\n      console.log(res);\r\n      let data = res.data;\r\n      setJeepneys(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Jeepney\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n          <AddJeepneyModal\r\n            info={\"\"}\r\n            passedData={setDataFromModal}\r\n            afterClosing={modalClosed}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Jeepneys</Divider>\r\n      <Row>\r\n        <Table dataSource={jeepneys} scroll={{ x: 1000, y: 500 }} sticky>\r\n          <Column\r\n            title=\"Barangay\"\r\n            dataIndex=\"barangayName\"\r\n            key=\"barangayId\"\r\n          ></Column>\r\n          <ColumnGroup\r\n            title=\"Plate Number\"\r\n            dataIndex=\"plateNumber\"\r\n            key=\"plateNumber\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Jeep Capacity\"\r\n            dataIndex=\"jeepCapacity\"\r\n            key=\"jeepCapacity\"\r\n          ></ColumnGroup>\r\n          {/* <ColumnGroup\r\n            title=\"Current Driver\"\r\n            dataIndex=\"currentDriver\"\r\n            key=\"currentDriver\"\r\n          ></ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            render={(value) => (\r\n              <Space>\r\n                <JeepneysInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysTableList;\r\n"],"sourceRoot":""}